<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>net471</TargetFramework>
	</PropertyGroup>

	<PropertyGroup>
		<RoundsFolder>E:\Program Files (x86)\Steam\steamapps\common\Landfall Archives\Archive\ROUNDS 3D\</RoundsFolder>
		<RootNamespace>R3DCore.CCAPI</RootNamespace>
		<AssemblyName>CustomCardAPI</AssemblyName>
		<AutoGenerateBindingRedirects>False</AutoGenerateBindingRedirects>
	</PropertyGroup>

	<ItemGroup>
		<Reference Include="0Harmony">
			<HintPath>$(RoundsFolder)\BepInEx\core\0Harmony.dll</HintPath>
		</Reference>
		<Reference Include="BepInEx">
			<HintPath>$(RoundsFolder)\BepInEx\core\BepInEx.dll</HintPath>
		</Reference>
		<Reference Include="Card Manager">
			<HintPath>$(RoundsFolder)\BepInEx\plugins\Card Manager.dll</HintPath>
		</Reference>
		<Reference Include="Assembly-CSharp">
			<HintPath>$(RoundsFolder)\ROUNDS 3D_Data\Managed\Assembly-CSharp.dll</HintPath>
		</Reference>
		<Reference Include="Photon3Unity3D">
			<HintPath>$(RoundsFolder)\ROUNDS 3D_Data\Managed\Photon3Unity3D.dll</HintPath>
		</Reference>
		<Reference Include="PhotonRealtime">
			<HintPath>$(RoundsFolder)\ROUNDS 3D_Data\Managed\PhotonRealtime.dll</HintPath>
		</Reference>
		<Reference Include="PhotonUnityNetworking">
			<HintPath>$(RoundsFolder)\ROUNDS 3D_Data\Managed\PhotonUnityNetworking.dll</HintPath>
		</Reference>
		<Reference Include="Unity.TextMeshPro">
			<HintPath>$(RoundsFolder)\ROUNDS 3D_Data\Managed\Unity.TextMeshPro.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine">
			<HintPath>$(RoundsFolder)\ROUNDS 3D_Data\Managed\UnityEngine.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine.AssetBundleModule">
			<HintPath>$(RoundsFolder)\ROUNDS 3D_Data\Managed\UnityEngine.AssetBundleModule.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine.CoreModule">
			<HintPath>$(RoundsFolder)\ROUNDS 3D_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine.UI">
			<HintPath>$(RoundsFolder)\ROUNDS 3D_Data\Managed\UnityEngine.UI.dll</HintPath>
		</Reference>
	</ItemGroup>

	<!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
         Other similar extension points exist, see Microsoft.Common.targets.
    <Target Name="BeforeBuild">
    </Target>
    <Target Name="AfterBuild">
    </Target>
    -->
	<Target Name="ReadPackageVersionFromOutputAssembly" DependsOnTargets="Build" Outputs="$(PackageVersion)">
		<GetAssemblyIdentity AssemblyFiles="$(TargetPath)">
			<Output TaskParameter="Assemblies" ItemName="PackAssembly" />
		</GetAssemblyIdentity>
		<PropertyGroup>
			<PackageVersion>%(PackAssembly.Version)</PackageVersion>
		</PropertyGroup>
	</Target>
	<Target Name="PostBuildTaskWin" Condition="'$(OS)' == 'Windows_NT'" DependsOnTargets="Build" AfterTargets="Build">
		<CallTarget Targets="ReadPackageVersionFromOutputAssembly">
			<Output TaskParameter="TargetOutputs" PropertyName="PackageVersion" />
		</CallTarget>
		<Exec Command="powershell.exe -ExecutionPolicy Bypass -File &quot;$(ProjectDir)publish.ps1&quot; -Version &quot;$(PackageVersion.Remove($(PackageVersion.LastIndexOf('.')), 2))&quot; -Target &quot;$(ConfigurationName)&quot; -TargetPath &quot;$(TargetDir.TrimEnd('\'))&quot; -TargetAssembly &quot;$(TargetFileName)&quot; -RoundsPath &quot;$(RoundsFolder.TrimEnd('\'))&quot; -ProjectPath &quot;$(ProjectDir.TrimEnd('\'))&quot;" />
	</Target>
</Project>
